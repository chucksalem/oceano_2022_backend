version: '3'

services:
  db:
    image: postgres:10.18-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes: 
      - db:/var/lib/postgresql/data
  rails:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - 3000:3000
    command: ./docker/entrypoint.sh
    depends_on:
      - db
    links:
      - db:db
    hostname: rails
    container_name: rails
    environment:
      RAILS_ENV: development
      ESCAPIA_USERNAME: OceanoWyt
      ESCAPIA_PASSWORD: GYH9n3CMyL2s
    volumes:
      - ./:/app
    stdin_open: true
    tty: true
  nginx-proxy:
    image: jwilder/nginx-proxy
    links:
      - rails:rails
      - frontend:frontend
    ports:
      - 80:80
      - 443:443
      - 5000:5000
    volumes:
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/ssl/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf
  
  redis:
    image: redis
    ports:
      - '6379:6379'

  sidekiq:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: bundle exec sidekiq
    entrypoint: docker/sidekiq-entrypoint.sh
    links:
      - db
      - redis
    env_file:
      - .env
  frontend:
     image: chucksalem/oceano-frontend:rs-prod
     platform: linux/amd64
     ports:
      - 3001:3001
  

volumes:
  db:
    driver: local
