server {
    listen 443 ssl;
    server_name www.oceano-rentals.com;
    
    ssl_certificate /etc/nginx/certs/certs/ssl-bundle.crt;
    ssl_certificate_key /etc/nginx/certs/certs/oceano-rentals.com_key_other.txt;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    location / {
        proxy_pass http://frontend:3001/;
        error_log /var/log/front_end_errors.log;
    }
    client_max_body_size 50M;
}

server {
    listen 443 ssl;
    server_name admin.oceano-rentals.com;

    ssl_certificate /etc/nginx/certs/certs/new-ssl-30-may-bundle.crt;
    ssl_certificate_key /etc/nginx/certs/certs/PrivateKeyFileName.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    location / {
        proxy_pass http://rails:3000; # Adjust if your Rails service is on a different port
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 5000 ssl;
    server_name www.oceano-rentals.com;

    ssl_certificate /etc/nginx/certs/certs/ssl-bundle.crt;
    ssl_certificate_key /etc/nginx/certs/certs/oceano-rentals.com_key_other.txt;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    location / {
        proxy_pass http://rails:3000/;
        error_log /var/log/front_end_errors.log;
    }
    client_max_body_size 50M;
}

server {
    listen 80 default_server;
    server_name oceano-rentals.com www.oceano-rentals.com;
    return 301 https://www.$host$request_uri;
}
